<!DOCTYPE html>
<html lang="kk">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Жарық құбылыстары</title>
<meta name="color-scheme" content="dark light">

<style>
/* ====== RESET & TOKENS ====== */
*,*::before,*::after{box-sizing:border-box;margin:0;padding:0}
:root{
  --bg0:#060a1b; --bg1:#0a1030;
  --txt:#e9eefc; --muted:#b7c2e8;
  --brand1:#4ea4ff; --brand2:#8a6bff; --brand3:#19ffd2;
  --glass: rgba(255,255,255,.06);
  --glass-stroke: rgba(180,210,255,.18);
  --radius:16px;
  --shadow: 0 10px 30px rgba(0,0,0,.45);
}

html,body{min-height:100%}
body{
  font-family: ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Nunito Sans", "Oswald", Arial, sans-serif;
  background:
    radial-gradient(60vw 60vh at 100% -10%, rgba(78,164,255,.15), transparent 55%),
    radial-gradient(50vw 50vh at -10% 100%, rgba(26,255,226,.12), transparent 55%),
    linear-gradient(180deg, var(--bg0), var(--bg1) 60%, #0a0f2d 100%);
  color:var(--txt);
  overflow-x:hidden;
}

/* animated aurora layers */
.aurora{ position:fixed; inset:-20vmax; pointer-events:none; z-index:-2; filter: blur(42px) saturate(120%); opacity:.85 }
.aurora div{
  position:absolute; width:55vmax; height:55vmax; border-radius:50%;
  background: radial-gradient(closest-side, rgba(78,164,255,.35), transparent 70%);
  animation: drift 26s linear infinite; mix-blend-mode:screen;
}
.aurora .b{ background: radial-gradient(closest-side, rgba(138,107,255,.35), transparent 70%); animation-duration:34s}
.aurora .c{ background: radial-gradient(closest-side, rgba(25,255,210,.35), transparent 70%); animation-duration:30s}
.aurora .d{ background: radial-gradient(closest-side, rgba(255,120,120,.25), transparent 70%); animation-duration:38s}
@keyframes drift{
  0%{transform:translate(-20vw,-10vh) rotate(0)}25%{transform:translate(40vw,-5vh) rotate(90deg)}
  50%{transform:translate(20vw,30vh) rotate(180deg)}75%{transform:translate(-30vw,10vh) rotate(270deg)}
  100%{transform:translate(-20vw,-10vh) rotate(360deg)}
}

/* faint stars */
.stars{ position:fixed; inset:0; pointer-events:none; z-index:-3; opacity:.6 }
.stars canvas{ width:100%; height:100%; display:block }

/* ====== HEADER ====== */
.header{
  position: sticky; top:0; z-index:20;
  backdrop-filter: blur(10px);
  background: linear-gradient(180deg, rgba(10,15,40,.7), rgba(10,15,40,.35));
  border-bottom:1px solid var(--glass-stroke);
}
.container{ width:min(1200px,92vw); margin:auto; }
.header .row{ display:flex; align-items:center; justify-content:space-between; padding:14px 0 }
.logo{ display:flex; align-items:center; gap:10px; font-weight:800; letter-spacing:.4px }
.logo .dot{
  width:26px;height:26px;border-radius:50%;
  background: radial-gradient(circle at 30% 30%, #fff, var(--brand1) 55%, transparent 62%);
  box-shadow: 0 0 22px rgba(78,164,255,.85), inset 0 0 10px rgba(255,255,255,.4);
}
.logo span{ font-family:"Oswald",system-ui,sans-serif; font-size:20px }

.nav ul{ list-style:none; display:flex; gap:22px; align-items:center }
.nav a{ color:var(--muted); text-decoration:none; font-weight:700 }
.nav a:hover,.nav a[aria-current="page"]{ color:#fff }
.burger{ display:none; font-size:26px; cursor:pointer; user-select:none }

@media (max-width:820px){
  .burger{ display:block }
  .nav ul{ position:fixed; right:18px; top:66px; flex-direction:column; gap:12px;
           background:rgba(10,15,40,.92); border:1px solid var(--glass-stroke); border-radius:12px;
           padding:14px; width: min(85vw, 320px); transform-origin: top right; transform: scale(.96); opacity:0; pointer-events:none; transition:.25s }
  .nav ul.open{ transform: scale(1); opacity:1; pointer-events:auto }
}

/* ====== HERO ====== */
.hero{ padding: clamp(24px,6vw,64px) 0 10px }
.hgrid{ display:grid; grid-template-columns: 1.15fr .85fr; gap: clamp(18px,3.6vw,44px); align-items:center }
@media (max-width:920px){ .hgrid{ grid-template-columns:1fr } }

.hero h1{
  font-family:"Oswald", system-ui, sans-serif;
  font-size: clamp(40px, 6vw, 72px);
  line-height:1.03; letter-spacing:.4px; margin-bottom:10px;
  background: linear-gradient(90deg, #e9efff, #9ec6ff 40%, #9e8bff 80%);
  -webkit-background-clip: text; -webkit-text-fill-color: transparent;
}
.hero p{ color:var(--muted); font-size: clamp(16px,1.7vw,20px); max-width: 52ch; margin-bottom:18px }
.btn{
  --h:46px; display:inline-flex; align-items:center; justify-content:center; gap:10px;
  height:var(--h); padding:0 20px; border-radius:calc(var(--h)/2); border:none; cursor:pointer;
  background: linear-gradient(90deg, var(--brand1), var(--brand2)); color:#061024; font-weight:900; text-decoration:none;
  box-shadow: 0 10px 30px rgba(78,164,255,.35), inset 0 0 0 1px rgba(255,255,255,.25);
  transition: transform .25s, box-shadow .25s, filter .25s;
}
.btn:hover{ transform: translateY(-2px); filter:saturate(115%); box-shadow:0 16px 40px rgba(78,164,255,.5) }
.btn:active{ transform: translateY(0) scale(.98) }

/* Prism accent (WOW) */
.prism{ position:relative; width:100%; aspect-ratio: 4/3; min-height:260px; border-radius:var(--radius);
        border:1px solid var(--glass-stroke); overflow:hidden; box-shadow: var(--shadow);
        background: radial-gradient(60% 50% at 40% 45%, rgba(255,255,255,.06), transparent 70%),
                    linear-gradient(180deg, rgba(255,255,255,.02), rgba(255,255,255,.01)); }
.prism .beam{
  position:absolute; left:-30%; top:45%; width:60%; height:2px; transform: rotate(6deg);
  background:linear-gradient(90deg, transparent 0, rgba(160,210,255,.7) 30%, #fff 80%);
  box-shadow:0 0 12px rgba(120,170,255,.9), 0 0 28px rgba(120,170,255,.5)
}
.prism .tri{
  position:absolute; left:45%; top:42%; width:180px; height:160px; transform: translate(-50%,-50%);
  clip-path: polygon(50% 6%, 96% 92%, 4% 92%);
  background: linear-gradient(130deg, rgba(255,255,255,.22), rgba(255,255,255,.06) 60%, rgba(255,255,255,.18));
  border:2px solid rgba(160,200,255,.6);
  filter: drop-shadow(0 0 16px rgba(120,170,255,.28));
}
.prism .tri::before{
  content:""; position:absolute; inset:0; clip-path:inherit;
  background:
    radial-gradient(100px 70px at 35% 60%, rgba(96,150,255,.35), transparent 60%),
    radial-gradient(90px 60px  at 65% 45%, rgba(96,150,255,.25), transparent 60%);
  filter: blur(12px);
}
.prism .spectrum{
  position:absolute; left:60%; top:50%; width:70%; height:60%;
  transform: translateY(-60%) rotate(12deg);
  mix-blend-mode:screen; pointer-events:none;
}
.prism .spectrum::before{
  content:""; position:absolute; inset:0;
  background: conic-gradient(from 200deg at 0% 50%, #ff0030, #ff7a00, #ffee00, #3aff00, #00ffe9, #2e5bff, #a855ff);
  clip-path: polygon(0 48%, 100% 18%, 100% 82%, 0 60%);
  filter: blur(10px) saturate(120%); opacity:.95;
}
.prism .spectrum::after{
  content:""; position:absolute; inset:0;
  background: conic-gradient(from 200deg at 0% 50%, rgba(255,0,48,.25), rgba(255,122,0,.25), rgba(255,238,0,.2), rgba(58,255,0,.18), rgba(0,255,233,.18), rgba(46,91,255,.2), rgba(168,85,255,.22));
  clip-path: polygon(0 50%, 100% 20%, 100% 80%, 0 62%);
  filter: blur(22px); opacity:.7;
}

/* ====== SECTIONS ====== */
.sections{ padding: clamp(24px,6vw,70px) 0 90px }
.sections h2{
  font-family:"Oswald",system-ui,sans-serif;
  font-size: clamp(28px,3.6vw,42px); margin-bottom:16px;
}
.cards{
  display:grid; gap: clamp(14px,2.4vw,24px);
  grid-template-columns: repeat( auto-fit, minmax(220px, 1fr) );
}
.card{
  position:relative; padding:18px 16px; border-radius:14px;
  background: linear-gradient(180deg, rgba(255,255,255,.06), rgba(255,255,255,.04));
  border:1px solid var(--glass-stroke);
  box-shadow: var(--shadow);
  transition:.35s transform cubic-bezier(.2,.8,.2,1), box-shadow .35s;
  overflow:hidden; isolation:isolate;
}
.card:hover{ transform: translateY(-6px); box-shadow: 0 18px 50px rgba(0,0,0,.55) }
.card .glow{
  position:absolute; inset:-40%;
  background: radial-gradient(closest-side, rgba(78,164,255,.22), transparent 70%),
              radial-gradient(closest-side, rgba(138,107,255,.22), transparent 70%);
  transform: translate(var(--mx,0),var(--my,0));
  mix-blend-mode:screen; filter: blur(24px); opacity:.65; z-index:-1;
}
.card svg{ width:60px; height:60px; display:block; margin-bottom:12px; filter: drop-shadow(0 0 10px rgba(120,170,255,.6)) }
.card h3{ font-size:18px; margin-bottom:6px }
.card p{ color:var(--muted); font-size:14px; line-height:1.6 }
.card a{ text-decoration:none; color:#a7b8ff; font-weight:800 }
.card a:hover{ color:#d7e0ff }

/* REVEAL */
.reveal{ opacity:0; transform: translateY(14px); transition:.7s cubic-bezier(.2,.8,.2,1) }
.reveal.visible{ opacity:1; transform:none }

/* FOOTER */
.footer{ text-align:center; color:#93a3d9; padding:24px 0 40px; border-top:1px solid var(--glass-stroke) }

/* REDUCED MOTION */
@media (prefers-reduced-motion: reduce){ .aurora,.stars{display:none} }

.authors{ padding: clamp(24px,6vw,70px) 0 90px }
.authors h2{
  font-family:"Oswald",system-ui,sans-serif;
  font-size: clamp(28px,3.6vw,42px); margin-bottom:16px;
}
.a-grid{
  display:grid; gap: clamp(16px,2.4vw,24px);
  grid-template-columns: repeat( auto-fit, minmax(260px, 1fr) );
}
.a-card{
  position:relative; padding:18px 18px 16px; border-radius:14px;
  background: linear-gradient(180deg, rgba(255,255,255,.06), rgba(255,255,255,.04));
  border:1px solid var(--glass-stroke);
  box-shadow: var(--shadow);
  transition:.35s transform cubic-bezier(.2,.8,.2,1), box-shadow .35s;
  overflow:hidden; isolation:isolate; text-align:center;
}
.a-card:hover{ transform: translateY(-6px); box-shadow: 0 18px 50px rgba(0,0,0,.55) }

.a-card .glow{
  position:absolute; inset:-40%;
  background: radial-gradient(closest-side, rgba(78,164,255,.22), transparent 70%),
              radial-gradient(closest-side, rgba(138,107,255,.22), transparent 70%);
  transform: translate(var(--mx,0),var(--my,0));
  mix-blend-mode:screen; filter: blur(24px); opacity:.65; z-index:-1;
}

.a-avatar{
  width:60%; height:60%; border-radius:50%; object-fit:cover; margin:6px auto 10px;
  border:2px solid rgba(160,200,255,.6);
  filter: drop-shadow(0 0 10px rgba(120,170,255,.45));
}
.a-card h3{ font-size:18px; margin:6px 0 2px }
.a-card .role{ color:#9ec6ff; font-weight:700; font-size:14px; margin-bottom:6px }
.a-card .bio{ color:var(--muted); font-size:14px; line-height:1.6; margin-bottom:10px }

.a-card .links{ display:flex; gap:12px; justify-content:center; flex-wrap:wrap }
.a-card .links a{
  text-decoration:none; color:#a7b8ff; font-weight:800;
  border-bottom:1px dashed rgba(167,184,255,.4);
}
.a-card .links a:hover{ color:#d7e0ff; border-bottom-color:transparent }

</style>
</head>
<body>

<!-- background FX -->
<div class="aurora">
  <div class="a"></div><div class="b"></div><div class="c"></div><div class="d"></div>
</div>
<div class="stars"><canvas id="stars"></canvas></div>

<!-- NAV -->
<header class="header">
  <div class="container">
    <div class="row">
      <a class="logo" href="index.htm" aria-label="Жарық құбылыстары">
        <span class="dot"></span><span>Жарық құбылыстары</span>
      </a>
      <nav class="nav">
        <ul>
          <li><a href="index.htm" aria-current="page">Басты бет</a></li>
          <li><a href="theory-1.html">Теориялар</a></li>
          <li><a href="laboratory.html">Лаборатория</a></li>
          <li><a href="test.html">Тесттер</a></li>
          <li><a href="esepter.html">Есептер</a></li>
        </ul>
      </nav>
      <div class="burger" aria-label="Мәзір">☰</div>
    </div>
  </div>
</header>

<!-- HERO -->
<section class="hero">
  <div class="container hgrid">
    <div class="hero-content reveal">
      <h1>Жарық құбылыстары</h1>
      <p>8 - сыныптың жарық құбылыстары тарауына арналған цифрлық оқу контенті</p>
      <a href="#sections" class="btn">Бастау</a>
    </div>

    <div class="prism reveal" aria-hidden="true">
      <div class="beam"></div>
      <div class="tri"></div>
      <div class="spectrum"></div>
    </div>
  </div>
</section>

<!-- SECTIONS -->
<section id="sections" class="sections">
  <div class="container">
    <h2 class="reveal">Негізгі бөлімдер</h2>
    <div class="cards">

      <!-- Теориялар -->
      <article class="card reveal">
        <div class="glow"></div>
        <svg viewBox="0 0 64 64" fill="none" stroke="#9ec6ff" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round">
          <path d="M10 14h24a8 8 0 0 1 8 8v28H18a8 8 0 0 0-8 8V14z"/>
          <path d="M42 50h12V22a8 8 0 0 0-8-8H26"/>
          <circle cx="44" cy="16" r="2.5"/>
          <ellipse cx="44" cy="16" rx="10" ry="5"/>
          <ellipse cx="44" cy="16" rx="5" ry="10" transform="rotate(35 44 16)"/>
          <ellipse cx="44" cy="16" rx="5" ry="10" transform="rotate(-35 44 16)"/>
        </svg>
        <h3>Теориялар</h3>
        <p>Физикалық заңдар мен формулалар.</p>
        <a href="theory-1.html">Өту →</a>
      </article>

      <!-- Лаборатория -->
      <article class="card reveal">
        <div class="glow"></div>
        <svg viewBox="0 0 64 64" fill="none" stroke="#9ec6ff" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round">
          <path d="M26 8v10l-12 20a12 12 0 0 0 10 18h16a12 12 0 0 0 10-18L38 18V8"/>
          <path d="M22 32h20"/><path d="M18 40h28"/><circle cx="44" cy="10" r="2.5"/><circle cx="50" cy="14" r="1.8"/>
        </svg>
        <h3>Лаборатория</h3>
        <p>Тәжірибелер мен есептер.</p>
        <a href="laboratory.html">Өту →</a>
      </article>

      <!-- Тесттер -->
      <article class="card reveal">
        <div class="glow"></div>
        <svg viewBox="0 0 64 64" fill="none" stroke="#9ec6ff" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round">
          <rect x="12" y="8" width="40" height="48" rx="6"/>
          <path d="M24 8h16"/><path d="M22 24l4 4 8-8"/><path d="M22 36l4 4 8-8"/><path d="M22 48h20"/>
        </svg>
        <h3>Тесттер</h3>
        <p>Біліміңді тексер.</p>
        <a href="test.html">Өту →</a>
      </article>

      <!-- Есептер -->
      <article class="card reveal">
        <div class="glow"></div>
        <svg viewBox="0 0 64 64" fill="none" stroke="#9ec6ff" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round">
          <circle cx="22" cy="22" r="8"/><path d="M6 54a16 16 0 0 1 32 0H6z"/>
          <circle cx="46" cy="16" r="5"/><path d="M36 38a14 14 0 0 1 22 12"/>
        </svg>
        <h3>Есептер</h3>
        <p>Жаттығулар мен шешімдер.</p>
        <a href="esepter.html">Өту →</a>
      </article>

    </div>
  </div>
</section>

<section id="authors" class="authors">
  <div class="container">
    <h2 class="reveal">Авторлар</h2>

    <div class="a-grid">
      <!-- Автор 1 -->
      <article class="a-card reveal">
        <div class="glow"></div>
        <img class="a-avatar" src="img/mam.png" alt="Автор 1" />
        <h3>Упишева Алмагул Мизамовна</h3>
        <p class="role">7М01504 “ББ физика”</p>
        <p class="bio">2 курс магистранты</p>
        <div class="links">
          <a href="erimanjan@gmail.com" aria-label="Email">erimanjan@gmail.com</a>
          <a href="+77014241382" target="_blank" rel="noopener">+77014241382</a>
        </div>
      </article>

      <!-- Автор 2 -->
      <article class="a-card reveal">
        <div class="glow"></div>
        <img class="a-avatar" src="img/mug.jpg" alt="Автор 2" />
        <h3>Куанбаева Баян Улжагалиевна</h3>
        <p class="role">Х. Досмұхамедов атындағы Атырау университеті физика және техникалық пәндер кафедрасының педагогика ғылымдарының кандидаты, профессор</p>
        <p class="bio">Жетекші</p>
        <div class="links">
          <a href="Bayan_Kuanbayeva@mail.ru">Bayan_Kuanbayeva@mail.ru</a>
          <a href="+77025001069" target="_blank" rel="noopener">+77025001069</a>
        </div>
      </article>
    </div>
  </div>
</section>


<footer class="footer">
  © 2025 Жарық құбылыстары • Барлық құқықтар қорғалған
</footer>

<script>
/* ====== Burger ====== */
const burger = document.querySelector('.burger');
const navList = document.querySelector('.nav ul');
burger?.addEventListener('click', ()=> navList.classList.toggle('open'));
document.addEventListener('click', e=>{
  if(!e.target.closest('.nav') && !e.target.closest('.burger')) navList.classList.remove('open');
});

/* ====== Reveal on view ====== */
const io = new IntersectionObserver((entries)=>{
  entries.forEach(e=>{ if(e.isIntersecting){ e.target.classList.add('visible'); io.unobserve(e.target) }})
},{threshold:.15});
document.querySelectorAll('.reveal, .card').forEach(el=>io.observe(el));

/* ====== Stars Canvas ====== */
(function stars(){
  const c = document.getElementById('stars'); const ctx = c.getContext('2d');
  let w,h,stars=[]; const DPR = Math.min(2, window.devicePixelRatio||1);
  function resize(){
    w=c.width = Math.floor(innerWidth*DPR);
    h=c.height= Math.floor(innerHeight*DPR);
    c.style.width=innerWidth+'px'; c.style.height=innerHeight+'px';
    const count = Math.floor((w*h)/22000);
    stars = Array.from({length:count}, ()=>({x:Math.random()*w, y:Math.random()*h, r:Math.random()*1.2+.3, a:Math.random()*1}));
  }
  resize(); addEventListener('resize', resize);
  let t0=performance.now();
  (function loop(now){
    const dt=(now-t0)/1000; t0=now;
    ctx.clearRect(0,0,w,h); ctx.globalCompositeOperation='screen';
    for(const s of stars){
      s.a+=(Math.random()-.5)*0.04;
      const alpha=.25+Math.abs(Math.sin(s.a))*0.45;
      ctx.beginPath(); ctx.fillStyle=`rgba(220,235,255,${alpha})`;
      ctx.arc(s.x,s.y,s.r*DPR,0,Math.PI*2); ctx.fill();
    }
    requestAnimationFrame(loop);
  })(t0);
})();

/* ====== Card glow follows cursor ====== */
document.querySelectorAll('.card').forEach(card=>{
  const glow = card.querySelector('.glow');
  function move(e){
    const r = card.getBoundingClientRect();
    const x = ((e.clientX - r.left)/r.width - .5)*40;
    const y = ((e.clientY - r.top )/r.height- .5)*40;
    glow.style.setProperty('--mx', x+'px');
    glow.style.setProperty('--my', y+'px');
  }
  card.addEventListener('mousemove', move);
  card.addEventListener('mouseleave', ()=>{ glow.style.setProperty('--mx','0'); glow.style.setProperty('--my','0') });
});

/* ====== Prism animation (breathing + pulse) ====== */
(function prism(){
  const prism = document.querySelector('.prism');
  const spectrum = document.querySelector('.prism .spectrum');
  const beam = document.querySelector('.prism .beam');
  const tri = document.querySelector('.prism .tri');
  if(!prism || !spectrum || !beam || !tri) return;

  // moving pulse on beam
  const pulse = document.createElement('div');
  Object.assign(pulse.style,{
    position:'absolute', top:'-3px', left:'0', width:'38px', height:'9px', borderRadius:'4px',
    background:'linear-gradient(90deg, rgba(255,255,255,0) 0%, rgba(200,230,255,0.85) 45%, #fff 90%)',
    boxShadow:'0 0 10px rgba(170,210,255,.9), 0 0 20px rgba(140,190,255,.8), 0 0 36px rgba(120,170,255,.6)',
    pointerEvents:'none', filter:'saturate(130%)', opacity:'0'
  });
  beam.appendChild(pulse);

  // parallax by mouse
  let tx=0,ty=0; const maxShift=8;
  addEventListener('mousemove', e=>{
    const r = prism.getBoundingClientRect();
    const cx=r.left+r.width/2, cy=r.top+r.height/2;
    const dx=(e.clientX-cx)/(r.width/2), dy=(e.clientY-cy)/(r.height/2);
    tx = Math.max(-1,Math.min(1,dx))*maxShift;
    ty = Math.max(-1,Math.min(1,dy))*maxShift;
  });

  let t0=performance.now();
  (function loop(now){
    const t=(now-t0)/1000;

    // breathing spectrum + edge glow
    const rot = 12 + Math.sin(t*.7)*1.1;
    const lift= -60 + Math.cos(t*.9)*1.2;
    spectrum.style.transform = `translateY(${lift}%) rotate(${rot}deg)`;
    tri.style.borderColor = `rgba(160,200,255,${0.58 + Math.sin(t*1.4)*.08})`;

    // smooth parallax
    const cur = prism._par || {x:0,y:0};
    cur.x += (tx - cur.x)*0.08; cur.y += (ty - cur.y)*0.08;
    prism._par = cur; prism.style.transform = `translate(${cur.x}px, ${cur.y}px)`;

    // beam pulse
    const w = beam.getBoundingClientRect().width;
    const period = 2.4; const phase = (t%period)/period;
    const x = Math.max(0, Math.min(w-38, phase*(w+120)-60));
    pulse.style.transform = `translateX(${x}px) rotate(6deg)`;
    pulse.style.opacity = (phase<.08 || phase>.92) ? 0 : 1;

    requestAnimationFrame(loop);
  })(t0);
})();

/* ====== Reduced motion ====== */
if (matchMedia('(prefers-reduced-motion: reduce)').matches) {
  document.querySelectorAll('.aurora, .stars').forEach(el=> el.style.display='none');
}
</script>
</body>
</html>
